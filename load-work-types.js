const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function loadWorkTypes() {
  try {
    console.log('üõ†Ô∏è –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã —Ä–∞–±–æ—Ç...')

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–¥–µ–ª—ã
    const departments = await prisma.department.findMany()
    const deptMap = {}
    departments.forEach(dept => {
      deptMap[dept.name] = dept.id
    })

    const workTypes = [
      // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
      {
        name: '–°–ª–µ—Å–∞—Ä–Ω–∞—è —Å–±–æ—Ä–∫–∞',
        description: '–°–±–æ—Ä–∫–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 750,
        productivityRate: 1.0,
        departmentId: deptMap['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ']
      },
      {
        name: '–°–≤–∞—Ä–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
        description: '–≠–ª–µ–∫—Ç—Ä–æ–¥—É–≥–æ–≤–∞—è –∏ –ø–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–≤–∞—Ä–∫–∞',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 950,
        productivityRate: 1.0,
        departmentId: deptMap['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ']
      },
      {
        name: '–¢–æ–∫–∞—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
        description: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ç–∞–ª–µ–π –Ω–∞ —Ç–æ–∫–∞—Ä–Ω–æ–º —Å—Ç–∞–Ω–∫–µ',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 650,
        productivityRate: 1.0,
        departmentId: deptMap['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ']
      },
      {
        name: '–§—Ä–µ–∑–µ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
        description: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ç–∞–ª–µ–π –Ω–∞ —Ñ—Ä–µ–∑–µ—Ä–Ω–æ–º —Å—Ç–∞–Ω–∫–µ',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 800,
        productivityRate: 1.0,
        departmentId: deptMap['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ']
      },
      
      // –ú–æ–Ω—Ç–∞–∂
      {
        name: '–ú–æ–Ω—Ç–∞–∂ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –º–æ–Ω—Ç–∞–∂ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 850,
        productivityRate: 1.0,
        departmentId: deptMap['–ú–æ–Ω—Ç–∞–∂']
      },
      {
        name: '–í—ã—Å–æ—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
        description: '–ú–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 1200,
        productivityRate: 1.0,
        departmentId: deptMap['–ú–æ–Ω—Ç–∞–∂']
      },
      {
        name: '–ö—Ä–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã',
        description: '–ü–æ–¥—ä–µ–º –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≥—Ä—É–∑–æ–≤ –∫—Ä–∞–Ω–æ–º',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 1100,
        productivityRate: 1.0,
        departmentId: deptMap['–ú–æ–Ω—Ç–∞–∂']
      },
      
      // –≠–ª–µ–∫—Ç—Ä–∏–∫–∞
      {
        name: '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂',
        description: '–ú–æ–Ω—Ç–∞–∂ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 900,
        productivityRate: 1.0,
        departmentId: deptMap['–≠–ª–µ–∫—Ç—Ä–∏–∫–∞']
      },
      {
        name: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã',
        description: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞–ª–∞–¥–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 700,
        productivityRate: 1.0,
        departmentId: deptMap['–≠–ª–µ–∫—Ç—Ä–∏–∫–∞']
      },
      {
        name: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 1300,
        productivityRate: 1.0,
        departmentId: deptMap['–≠–ª–µ–∫—Ç—Ä–∏–∫–∞']
      },
      
      // –î–∏–∑–∞–π–Ω
      {
        name: '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –º–∞–∫–µ—Ç–æ–≤',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 800,
        productivityRate: 1.0,
        departmentId: deptMap['–î–∏–∑–∞–π–Ω']
      },
      {
        name: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 1100,
        productivityRate: 1.0,
        departmentId: deptMap['–î–∏–∑–∞–π–Ω']
      },
      {
        name: '3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ—Ö–º–µ—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 950,
        productivityRate: 1.0,
        departmentId: deptMap['–î–∏–∑–∞–π–Ω']
      },
      
      // –õ–æ–≥–∏—Å—Ç–∏–∫–∞
      {
        name: '–î–æ—Å—Ç–∞–≤–∫–∞',
        description: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 600,
        productivityRate: 1.0,
        departmentId: deptMap['–õ–æ–≥–∏—Å—Ç–∏–∫–∞']
      },
      {
        name: '–°–∫–ª–∞–¥—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
        description: '–ü—Ä–∏–µ–º, —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤—ã–¥–∞—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 550,
        productivityRate: 1.0,
        departmentId: deptMap['–õ–æ–≥–∏—Å—Ç–∏–∫–∞']
      },
      {
        name: '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
        description: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫',
        unit: '—á–∞—Å',
        standardTime: 1.0,
        hourlyRate: 750,
        productivityRate: 1.0,
        departmentId: deptMap['–õ–æ–≥–∏—Å—Ç–∏–∫–∞']
      }
    ]

    let createdCount = 0
    for (const workType of workTypes) {
      await prisma.workType.create({
        data: {
          ...workType,
          isActive: true
        }
      })
      createdCount++
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø —Ä–∞–±–æ—Ç—ã: ${workType.name} - ${workType.hourlyRate} —Ä—É–±/—á`)
    }

    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${createdCount} —Ç–∏–ø–æ–≤ —Ä–∞–±–æ—Ç!`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–ø–æ–≤ —Ä–∞–±–æ—Ç:', error)
  } finally {
    await prisma.$disconnect()
  }
}

loadWorkTypes()

"use client"

import React, { useState } from "react"
import { Button } from "@/components/ui/button"
import { 
  DropdownMenu, 
  DropdownMenuContent, 
  DropdownMenuItem, 
  DropdownMenuTrigger,
  DropdownMenuSeparator
} from "@/components/ui/dropdown-menu"
import { Badge } from "@/components/ui/badge"
import { 
  ChevronDown, 
  Copy, 
  Percent, 
  Trash2, 
  FolderOpen,
  Zap,
  Settings
} from "lucide-react"
import { useLanguage } from "@/context/language-context"

interface CategoryBulkActionsButtonProps {
  categoryId: string
  categoryName: string
  materialsCount: number
  onBulkAction: (action: string) => void
}

export function CategoryBulkActionsButton({ 
  categoryId, 
  categoryName, 
  materialsCount,
  onBulkAction 
}: CategoryBulkActionsButtonProps) {
  const { t } = useLanguage()
  const [isProcessing, setIsProcessing] = useState(false)

  if (materialsCount === 0) {
    return (
      <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
        <div className="text-center">
          <p className="text-gray-600">–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</p>
          <p className="text-sm text-gray-500 mt-1">
            –î–æ–±–∞–≤—å—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </p>
        </div>
      </div>
    )
  }

  const handleAction = async (action: string) => {
    setIsProcessing(true)
    try {
      await onBulkAction(action)
    } finally {
      setIsProcessing(false)
    }
  }

  return (
    <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-3">
          <div className="flex items-center justify-center w-10 h-10 bg-blue-100 rounded-lg">
            <Zap className="h-5 w-5 text-blue-600" />
          </div>
          <div>
            <h3 className="text-lg font-semibold text-gray-900">
              –ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            </h3>
            <p className="text-sm text-gray-600">
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –∫–æ –≤—Å–µ–º <Badge variant="secondary" className="mx-1">
                {materialsCount}
              </Badge> –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{categoryName}"
            </p>
          </div>
        </div>

        <div className="flex items-center gap-2">
          {/* –î–µ–π—Å—Ç–≤–∏—è —Å —Ü–µ–Ω–∞–º–∏ */}
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="outline" size="sm" disabled={isProcessing}>
                <Percent className="h-4 w-4 mr-2" />
                –¶–µ–Ω—ã
                <ChevronDown className="h-4 w-4 ml-1" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent>
              <DropdownMenuItem onClick={() => handleAction('increase_price_percent')}>
                üìà –£–≤–µ–ª–∏—á–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ %
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => handleAction('decrease_price_percent')}>
                üìâ –£–º–µ–Ω—å—à–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ %
              </DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem onClick={() => handleAction('update_currency_usd_rub')}>
                üí± –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –≤ —Ä—É–±–ª–∏
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => handleAction('update_currency_rub_usd')}>
                üí∞ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –≤ –¥–æ–ª–ª–∞—Ä—ã
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>

          {/* –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ */}
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="outline" size="sm" disabled={isProcessing}>
                <Copy className="h-4 w-4 mr-2" />
                –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
                <ChevronDown className="h-4 w-4 ml-1" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent>
              <DropdownMenuItem onClick={() => handleAction('copy_simple')}>
                üìã –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏–∏
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => handleAction('copy_to_category')}>
                üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => handleAction('copy_with_changes')}>
                ‚úèÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>

          {/* –î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="outline" size="sm" disabled={isProcessing}>
                <Settings className="h-4 w-4 mr-2" />
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                <ChevronDown className="h-4 w-4 ml-1" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent>
              <DropdownMenuItem onClick={() => handleAction('change_category')}>
                üìÇ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
              </DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem 
                onClick={() => handleAction('delete_soft')}
                className="text-red-600 hover:text-red-700"
              >
                <Trash2 className="h-4 w-4 mr-2" />
                –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      </div>
    </div>
  )
}

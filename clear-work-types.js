const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function clearWorkTypes() {
  try {
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç –∏ –æ—Ç–¥–µ–ª—ã...')
    
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    const deletedWorkTypeUsages = await prisma.productWorkTypeUsage.deleteMany({})
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedWorkTypeUsages.count} —Å–≤—è–∑–µ–π –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏`)
    
    // –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const deletedEmployees = await prisma.employee.deleteMany({})
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedEmployees.count} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤`)
    
    // –£–¥–∞–ª—è–µ–º –≤–∏–¥—ã —Ä–∞–±–æ—Ç
    const deletedWorkTypes = await prisma.workType.deleteMany({})
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedWorkTypes.count} –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç`)
    
    // –£–¥–∞–ª—è–µ–º –æ—Ç–¥–µ–ª—ã/–¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã
    const deletedDepartments = await prisma.department.deleteMany({})
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedDepartments.count} –æ—Ç–¥–µ–ª–æ–≤`)
    
    console.log('üéâ –í—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç, –æ—Ç–¥–µ–ª—ã –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç:', error)
  } finally {
    await prisma.$disconnect()
  }
}

clearWorkTypes()

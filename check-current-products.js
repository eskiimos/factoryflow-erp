const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkProducts() {
  try {
    console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...\n');

    // –í—Å–µ —Ç–æ–≤–∞—Ä—ã
    const allProducts = await prisma.product.findMany({
      include: {
        group: true,
        subgroup: true
      },
      orderBy: { createdAt: 'desc' }
    });

    console.log(`üîç –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: ${allProducts.length}`);
    
    if (allProducts.length > 0) {
      console.log('\nüì¶ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤:');
      allProducts.forEach((product, index) => {
        console.log(`${index + 1}. ${product.name} (${product.sku || '–±–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞'})`);
        console.log(`   –ì—Ä—É–ø–ø–∞: ${product.group?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
        console.log(`   –ü–æ–¥–≥—Ä—É–ø–ø–∞: ${product.subgroup?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
        console.log(`   –¶–µ–Ω–∞: ${product.sellingPrice} ${product.currency}`);
        console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${product.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log('');
      });
    }

    // –í—Å–µ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
    const allGroups = await prisma.productGroup.findMany({
      include: {
        _count: {
          select: { products: true }
        }
      },
      orderBy: { createdAt: 'desc' }
    });

    console.log(`üìÅ –í—Å–µ–≥–æ –≥—Ä—É–ø–ø —Ç–æ–≤–∞—Ä–æ–≤: ${allGroups.length}`);
    
    if (allGroups.length > 0) {
      console.log('\nüìÇ –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø:');
      allGroups.forEach((group, index) => {
        console.log(`${index + 1}. ${group.name} (—Ç–æ–≤–∞—Ä–æ–≤: ${group._count.products})`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω–∞: ${group.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
      });
    }

    // –í—Å–µ –ø–æ–¥–≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
    const allSubgroups = await prisma.productSubgroup.findMany({
      include: {
        group: true,
        _count: {
          select: { products: true }
        }
      },
      orderBy: { createdAt: 'desc' }
    });

    console.log(`\nüìÇ –í—Å–µ–≥–æ –ø–æ–¥–≥—Ä—É–ø–ø —Ç–æ–≤–∞—Ä–æ–≤: ${allSubgroups.length}`);
    
    if (allSubgroups.length > 0) {
      console.log('\nüìÇ –°–ø–∏—Å–æ–∫ –ø–æ–¥–≥—Ä—É–ø–ø:');
      allSubgroups.forEach((subgroup, index) => {
        console.log(`${index + 1}. ${subgroup.name} (—Ç–æ–≤–∞—Ä–æ–≤: ${subgroup._count.products})`);
        console.log(`   –ì—Ä—É–ø–ø–∞: ${subgroup.group?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω–∞: ${subgroup.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkProducts();

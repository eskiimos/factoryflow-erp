// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
const testGroupIds = async () => {
  try {
    console.log('üß™ Testing Group IDs...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã
    const groupsResponse = await fetch('http://localhost:3005/api/product-groups');
    const groupsData = await groupsResponse.json();
    
    console.log('üìã All groups:');
    groupsData.data.forEach(group => {
      console.log(`  - ID: ${group.id}, Name: ${group.name}, Products: ${group._count.products}`);
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—É –ü–æ–≥–æ–Ω–∞–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è
    const targetGroup = groupsData.data.find(g => g.name === '–ü–æ–≥–æ–Ω–∞–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è');
    if (targetGroup) {
      console.log(`\nüéØ Target Group: ${targetGroup.name}`);
      console.log(`   ID: ${targetGroup.id}`);
      console.log(`   Products Count: ${targetGroup._count.products}`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ç–æ–≤–∞—Ä–æ–≤
      const productsResponse = await fetch(`http://localhost:3005/api/products?groupId=${targetGroup.id}&showAll=true`);
      const productsData = await productsResponse.json();
      
      console.log(`\nüì¶ Products API Result:`);
      console.log(`   Status: ${productsResponse.status}`);
      console.log(`   Products returned: ${productsData.data ? productsData.data.length : 0}`);
      console.log(`   Data structure:`, productsData);
    }
  } catch (error) {
    console.error('‚ùå Test failed:', error);
  }
};

testGroupIds();

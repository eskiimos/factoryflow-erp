const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function createSimpleProduct() {
  console.log('üè≠ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞...');

  try {
    // –ù–∞–π–¥–µ–º –ø–æ–¥–≥—Ä—É–ø–ø—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const subgroup = await prisma.productSubgroup.findFirst({
      where: { name: { contains: '–í—ã–≤–µ—Å–∫–∏' } }
    });
    
    const category = await prisma.category.findFirst({
      where: { name: { contains: '–ù–∞—Ä—É–∂–Ω–∞—è' } }
    });

    console.log('–ù–∞–π–¥–µ–Ω–Ω–∞—è –ø–æ–¥–≥—Ä—É–ø–ø–∞:', subgroup?.name);
    console.log('–ù–∞–π–¥–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', category?.name);

    if (!subgroup) {
      console.log('‚ùå –ü–æ–¥–≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–æ–≤–∞—Ä
    const product = await prisma.product.create({
      data: {
        name: '–¢–µ—Å—Ç–æ–≤–∞—è –≤—ã–≤–µ—Å–∫–∞',
        description: '–ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –≤—ã–≤–µ—Å–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏',
        sku: 'TEST001',
        unit: '—Å–º¬≤',
        sellingPrice: 15.50,
        subgroupId: subgroup.id,
        currentStock: 0,
        minStock: 1000,
        maxStock: 10000,
        isActive: true
      }
    });

    console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω:', product.name);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —Ç–æ–≤–∞—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
    const allProducts = await prisma.product.findMany();
    console.log(`üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: ${allProducts.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createSimpleProduct();

const fs = require('fs');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
const filesToFix = [
  'src/app/api/departments/[id]/route.ts',
  'src/app/api/employees/[id]/route.ts',
  'src/app/api/orders/[id]/route.ts',
  'src/app/api/orders/[id]/items/route.ts',
  'src/app/api/orders/calculator/[id]/recalculate/route.ts',
  'src/app/api/fund-items/[id]/route.ts',
  'src/app/api/budget-plans/[id]/route.ts'
];

function removeDuplicates(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ const { id } = await params;
    content = content.replace(
      /(const\s*\{\s*id\s*\}\s*=\s*await\s*params;\s*\n\s*const\s*\{\s*id\s*\}\s*=\s*await\s*params;)/g,
      'const { id } = await params;'
    );
    
    fs.writeFileSync(filePath, content);
    console.log(`‚úÖ Fixed duplicates in: ${filePath}`);
  } catch (error) {
    console.error(`‚ùå Error fixing ${filePath}:`, error.message);
  }
}

console.log('üîß Removing duplicate const { id } = await params; lines...\n');

filesToFix.forEach(removeDuplicates);

console.log('\n‚ú® Done! Duplicates removed.');

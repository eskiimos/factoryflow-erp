generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum ProductType {
  STANDARD    // Стандартный товар (с расчетом за единицу)
  ASSEMBLY    // Сборный товар (состоит из других товаров)
  WAREHOUSE   // Товар со склада (фиксированная стоимость)
}

model Category {
  id                String                  @id @default(cuid())
  name              String                  @unique
  description       String?
  isActive          Boolean                 @default(true)
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
  categoryForecasts CategorySalesForecast[]
  materialItems     MaterialItem[]

  @@map("categories")
}

model MaterialItem {
  id                      String                   @id @default(cuid())
  name                    String
  unit                    String
  price                   Float
  currency                String                   @default("RUB")
  isActive                Boolean                  @default(true)
  categoryId              String?
  tags                    String?
  baseUnit                String                   @default("шт")
  calculationUnit         String?
  conversionFactor        Float                    @default(1.0)
  coverageArea            Float?
  usagePerUnit            Float?
  currentStock            Float                    @default(0)
  criticalMinimum         Float                    @default(0)
  satisfactoryLevel       Float                    @default(0)
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  componentMaterialUsages ComponentMaterialUsage[]
  cuttingTemplates        CuttingTemplate[]
  category                Category?                @relation(fields: [categoryId], references: [id])
  orderItemMaterials      OrderItemMaterial[]
  productMaterialUsages   ProductMaterialUsage[]

  @@map("material_items")
}

model Department {
  id          String     @id @default(cuid())
  name        String     @unique
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  employees   Employee[]
  workTypes   WorkType[]

  @@map("departments")
}

model WorkType {
  id                      String                   @id @default(cuid())
  name                    String
  description             String?
  unit                    String
  standardTime            Float
  hourlyRate              Float
  currency                String                   @default("RUB")
  skillLevel              String
  equipmentRequired       String?
  safetyRequirements      String?
  isActive                Boolean                  @default(true)
  departmentId            String?
  calculationUnit         String?
  productivityRate        Float                    @default(1.0)
  timePerUnit             Float?
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  componentWorkTypeUsages ComponentWorkTypeUsage[]
  orderItemWorkTypes      OrderItemWorkType[]
  productWorkTypeUsages   ProductWorkTypeUsage[]
  department              Department?              @relation(fields: [departmentId], references: [id])

  @@map("work_types")
}

model Employee {
  id              String      @id @default(cuid())
  personnelNumber String      @unique
  firstName       String
  lastName        String
  middleName      String?
  position        String
  skillLevel      String
  hourlyRate      Float
  currency        String      @default("RUB")
  hireDate        DateTime
  phone           String?
  email           String?
  status          String      @default("ACTIVE")
  isActive        Boolean     @default(true)
  departmentId    String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  department      Department? @relation(fields: [departmentId], references: [id])

  @@map("employees")
}

model ProductGroup {
  id          String            @id @default(cuid())
  name        String            @unique
  description String?
  isActive    Boolean           @default(true)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  subgroups   ProductSubgroup[]
  products    Product[]

  @@map("product_groups")
}

model ProductSubgroup {
  id          String            @id @default(cuid())
  name        String
  description String?
  isActive    Boolean           @default(true)
  groupId     String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  parentId    String?
  parent      ProductSubgroup?  @relation("SubgroupHierarchy", fields: [parentId], references: [id])
  subgroups   ProductSubgroup[] @relation("SubgroupHierarchy")
  group       ProductGroup      @relation(fields: [groupId], references: [id], onDelete: Cascade)
  products    Product[]

  @@unique([groupId, name])
  @@map("product_subgroups")
}

model Product {
  id                String                 @id @default(cuid())
  name              String
  description       String?
  sku               String                 @unique
  unit              String
  productType       ProductType            @default(STANDARD)
  type              String                 @default("PRODUCT")
  pricingMethod     String                 @default("FIXED")
  baseUnit          String                 @default("шт")
  basePrice         Float                  @default(0)
  minimumOrder      Float                  @default(1)
  priceBreaks       String?
  materialRate      Float                  @default(1.0)
  laborRate         Float                  @default(1.0)
  complexityRate    Float                  @default(1.0)
  formulaEnabled    Boolean                @default(false)
  formulaExpression String?
  materialCost      Float                  @default(0)
  laborCost         Float                  @default(0)
  overheadCost      Float                  @default(0)
  totalCost         Float                  @default(0)
  sellingPrice      Float                  @default(0)
  margin            Float                  @default(0)
  currency          String                 @default("RUB")
  productionTime    Float                  @default(0)
  currentStock      Float                  @default(0)
  minStock          Float                  @default(0)
  maxStock          Float                  @default(0)
  tags              String?
  specifications    String?
  images            String?
  isActive          Boolean                @default(true)
  constructorBlocks String?
  autoTemplateId    String?
  groupId           String?
  subgroupId        String?
  createdAt         DateTime               @default(now())
  updatedAt         DateTime               @updatedAt
  orderItems        OrderItem[]
  components        ProductComponent[]
  fundUsages        ProductFundUsage[]
  materialUsages    ProductMaterialUsage[]
  parameters        ProductParameter[]
  productForecasts  ProductSalesForecast[]
  variants          ProductVariant[]
  workTypeUsages    ProductWorkTypeUsage[]
  assemblyComponents AssemblyComponent[]   @relation("ParentProduct")
  assemblyUsages     AssemblyComponent[]   @relation("ComponentProduct")
  autoTemplate      Template?              @relation("AutoGeneratedTemplate", fields: [autoTemplateId], references: [id])
  subgroup          ProductSubgroup?       @relation(fields: [subgroupId], references: [id])
  group             ProductGroup?          @relation(fields: [groupId], references: [id])

  @@map("products")
}

model ProductVariant {
  id                     String             @id @default(cuid())
  productId              String
  name                   String
  sku                    String?            @unique
  description            String?
  specifications         String?
  priceModifier          Float              @default(0)
  priceModifierType      String             @default("PERCENTAGE")
  costModifier           Float              @default(0)
  costModifierType       String             @default("PERCENTAGE")
  productionTimeModifier Float              @default(0)
  stockQuantity          Float              @default(0)
  minStock               Float              @default(0)
  maxStock               Float              @default(0)
  weight                 Float?
  dimensions             String?
  images                 String?
  isActive               Boolean            @default(true)
  sortOrder              Int                @default(0)
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  product                Product            @relation(fields: [productId], references: [id], onDelete: Cascade)
  attributes             VariantAttribute[]
  options                VariantOption[]

  @@map("product_variants")
}

model VariantAttribute {
  id             String         @id @default(cuid())
  variantId      String
  attributeName  String
  attributeValue String
  attributeType  String         @default("TEXT")
  unit           String?
  displayOrder   Int            @default(0)
  createdAt      DateTime       @default(now())
  variant        ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@map("variant_attributes")
}

model VariantOption {
  id                     String         @id @default(cuid())
  variantId              String
  name                   String
  description            String?
  type                   String         @default("ADDON")
  priceModifier          Float          @default(0)
  priceModifierType      String         @default("FIXED")
  costModifier           Float          @default(0)
  costModifierType       String         @default("FIXED")
  productionTimeModifier Float          @default(0)
  isDefault              Boolean        @default(false)
  isActive               Boolean        @default(true)
  sortOrder              Int            @default(0)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  variant                ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@map("variant_options")
}

model ProductMaterialUsage {
  id                 String       @id @default(cuid())
  productId          String
  materialItemId     String
  quantity           Float
  cost               Float
  unitType           String       @default("fixed")
  baseQuantity       Float        @default(0)
  calculationFormula String?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  materialItem       MaterialItem @relation(fields: [materialItemId], references: [id], onDelete: Cascade)
  product            Product      @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, materialItemId])
  @@map("product_material_usages")
}

model ProductWorkTypeUsage {
  id                 String   @id @default(cuid())
  productId          String
  workTypeId         String
  quantity           Float
  cost               Float
  sequence           Int      @default(0)
  unitType           String   @default("fixed")
  baseTime           Float    @default(0)
  calculationFormula String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  workType           WorkType @relation(fields: [workTypeId], references: [id], onDelete: Cascade)
  product            Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, workTypeId])
  @@map("product_work_type_usages")
}

model ProductFundUsage {
  id              String            @id @default(cuid())
  productId       String
  fundId          String
  categoryId      String
  itemId          String?
  allocatedAmount Float
  percentage      Float?
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  item            FundCategoryItem? @relation(fields: [itemId], references: [id])
  category        FundCategory      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  fund            Fund              @relation(fields: [fundId], references: [id], onDelete: Cascade)
  product         Product           @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, fundId, categoryId])
  @@map("product_fund_usages")
}

model ProductParameter {
  id              String                    @id @default(cuid())
  productId       String
  name            String
  type            String
  unit            String?
  defaultValue    String?
  minValue        Float?
  maxValue        Float?
  selectOptions   String?
  isRequired      Boolean                   @default(true)
  sortOrder       Int                       @default(0)
  description     String?
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
  orderItemValues OrderItemParameterValue[]
  product         Product                   @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, name])
  @@map("product_parameters")
}

model OrderItemParameterValue {
  id            String           @id @default(cuid())
  orderItemId   String
  parameterId   String
  parameterName String
  value         String
  unit          String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  parameter     ProductParameter @relation(fields: [parameterId], references: [id], onDelete: Cascade)
  orderItem     OrderItem        @relation(fields: [orderItemId], references: [id], onDelete: Cascade)

  @@unique([orderItemId, parameterId])
  @@map("order_item_parameter_values")
}

model BudgetPlan {
  id               String           @id @default(cuid())
  name             String
  description      String?
  planType         String
  startDate        DateTime
  endDate          DateTime
  status           String           @default("DRAFT")
  totalRevenue     Float            @default(0)
  totalCosts       Float            @default(0)
  materialCosts    Float            @default(0)
  laborCosts       Float            @default(0)
  overheadCosts    Float            @default(0)
  targetProfit     Float            @default(0)
  isActive         Boolean          @default(true)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  budgetCategories BudgetCategory[]
  salesForecasts   SalesForecast[]

  @@map("budget_plans")
}

model BudgetCategory {
  id            String     @id @default(cuid())
  budgetPlanId  String
  name          String
  categoryType  String
  plannedAmount Float      @default(0)
  actualAmount  Float      @default(0)
  description   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  budgetPlan    BudgetPlan @relation(fields: [budgetPlanId], references: [id], onDelete: Cascade)

  @@map("budget_categories")
}

model SalesForecast {
  id                String                  @id @default(cuid())
  budgetPlanId      String?
  name              String
  forecastType      String
  startDate         DateTime
  endDate           DateTime
  periodType        String
  totalQuantity     Float                   @default(0)
  totalRevenue      Float                   @default(0)
  averagePrice      Float                   @default(0)
  growthRate        Float                   @default(0)
  seasonality       Float                   @default(1)
  marketTrend       Float                   @default(1)
  confidence        String                  @default("MEDIUM")
  methodology       String?
  notes             String?
  isActive          Boolean                 @default(true)
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
  categoryForecasts CategorySalesForecast[]
  productForecasts  ProductSalesForecast[]
  budgetPlan        BudgetPlan?             @relation(fields: [budgetPlanId], references: [id])

  @@map("sales_forecasts")
}

model ProductSalesForecast {
  id              String        @id @default(cuid())
  salesForecastId String
  productId       String
  plannedQuantity Float         @default(0)
  plannedRevenue  Float         @default(0)
  plannedPrice    Float         @default(0)
  actualQuantity  Float         @default(0)
  actualRevenue   Float         @default(0)
  actualPrice     Float         @default(0)
  priority        String        @default("MEDIUM")
  notes           String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  product         Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  salesForecast   SalesForecast @relation(fields: [salesForecastId], references: [id], onDelete: Cascade)

  @@unique([salesForecastId, productId])
  @@map("product_sales_forecasts")
}

model CategorySalesForecast {
  id              String        @id @default(cuid())
  salesForecastId String
  categoryId      String
  plannedQuantity Float         @default(0)
  plannedRevenue  Float         @default(0)
  actualQuantity  Float         @default(0)
  actualRevenue   Float         @default(0)
  notes           String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  category        Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  salesForecast   SalesForecast @relation(fields: [salesForecastId], references: [id], onDelete: Cascade)

  @@unique([salesForecastId, categoryId])
  @@map("category_sales_forecasts")
}

model Fund {
  id              String             @id @default(cuid())
  name            String
  description     String?
  fundType        String
  totalAmount     Float              @default(0)
  allocatedAmount Float              @default(0)
  remainingAmount Float              @default(0)
  status          String             @default("ACTIVE")
  startDate       DateTime?
  endDate         DateTime?
  isActive        Boolean            @default(true)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  categories      FundCategory[]
  transactions    FundTransaction[]
  orderItemFunds  OrderItemFund[]
  productUsages   ProductFundUsage[]

  @@map("funds")
}

model FundCategory {
  id            String             @id @default(cuid())
  fundId        String
  name          String
  categoryType  String
  emoji         String             @default("🔧")
  plannedAmount Float              @default(0)
  actualAmount  Float              @default(0)
  percentage    Float?
  description   String?
  priority      Int                @default(1)
  isActive      Boolean            @default(true)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  fund          Fund               @relation(fields: [fundId], references: [id], onDelete: Cascade)
  items         FundCategoryItem[]
  productUsages ProductFundUsage[]

  @@map("fund_categories")
}

model FundCategoryItem {
  id            String             @id @default(cuid())
  categoryId    String
  name          String
  itemType      String
  amount        Float              @default(0)
  currency      String             @default("RUB")
  percentage    Float?
  description   String?
  employeeId    String?
  isRecurring   Boolean            @default(false)
  priority      Int                @default(1)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  category      FundCategory       @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  productUsages ProductFundUsage[]

  @@map("fund_category_items")
}

model FundTransaction {
  id              String   @id @default(cuid())
  fundId          String
  transactionType String
  amount          Float
  currency        String   @default("RUB")
  description     String?
  categoryId      String?
  itemId          String?
  status          String   @default("PENDING")
  transactionDate DateTime @default(now())
  approvedBy      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  fund            Fund     @relation(fields: [fundId], references: [id], onDelete: Cascade)

  @@map("fund_transactions")
}

model Parameter {
  id                 String              @id @default(cuid())
  code               String              @unique
  name               String
  description        String?
  type               String
  unit               String?
  minValue           Float?
  maxValue           Float?
  precision          Int                 @default(2)
  defaultValue       String?
  selectOptions      String?
  isRequired         Boolean             @default(false)
  validationRegex    String?
  validationMessage  String?
  category           String?
  sortOrder          Int                 @default(0)
  isActive           Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  templateParameters TemplateParameter[]

  @@map("parameters")
}

model Formula {
  id               String            @id @default(cuid())
  code             String            @unique
  name             String
  description      String?
  expression       String
  inputParameters  String
  outputType       String            @default("NUMBER")
  outputUnit       String?
  roundingMethod   String            @default("ROUND")
  precision        Int               @default(2)
  priority         Int               @default(100)
  conditions       String?
  isActive         Boolean           @default(true)
  version          String            @default("1.0")
  parentFormulaId  String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  parentFormula    Formula?          @relation("FormulaVersions", fields: [parentFormulaId], references: [id])
  childFormulas    Formula[]         @relation("FormulaVersions")
  templateFormulas TemplateFormula[]

  @@map("formulas")
}

model Resource {
  id                    String            @id @default(cuid())
  code                  String            @unique
  name                  String
  description           String?
  type                  String
  category              String?
  subcategory           String?
  baseUnit              String
  alternateUnits        String?
  costPrice             Float             @default(0)
  sellingPrice          Float             @default(0)
  currency              String            @default("RUB")
  wasteCoefficient      Float             @default(0)
  setupCoefficient      Float             @default(0)
  efficiencyCoefficient Float             @default(1)
  supplierId            String?
  warehouseId           String?
  leadTime              Int               @default(0)
  minOrderQty           Float             @default(0)
  properties            String?
  specifications        String?
  isActive              Boolean           @default(true)
  tags                  String?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  bomItems              BomItem[]
  bomTemplateItems      BomTemplateItem[]

  @@map("resources")
}

model Template {
  id                       String                      @id @default(cuid())
  code                     String                      @unique
  name                     String
  description              String?
  category                 String
  subcategory              String?
  productFamily            String?
  basePrice                Float                       @default(0)
  marginPercent            Float                       @default(20)
  currency                 String                      @default("RUB")
  calculationUnit          String                      @default("шт")
  outputUnit               String                      @default("шт")
  unitConversion           String?
  pricingFormula           String?
  minimumPrice             Float                       @default(0)
  setupCost                Float                       @default(0)
  formLayout               String?
  stepByStep               Boolean                     @default(false)
  previewEnabled           Boolean                     @default(true)
  baseLaborTime            Float                       @default(0)
  setupTime                Float                       @default(0)
  department               String?
  version                  String                      @default("1.0")
  parentTemplateId         String?
  isLatest                 Boolean                     @default(true)
  status                   String                      @default("DRAFT")
  isActive                 Boolean                     @default(true)
  createdBy                String?
  createdAt                DateTime                    @default(now())
  updatedAt                DateTime                    @updatedAt
  bomTemplate              BomTemplate?
  calculations             Calculation[]
  orderItems               OrderItem[]                 @relation("OrderItemTemplate")
  blockTemplates           ProductTemplateFromBlocks[] @relation("BlockGeneratedTemplate")
  autoGeneratedForProducts Product[]                   @relation("AutoGeneratedTemplate")
  formulas                 TemplateFormula[]
  parameters               TemplateParameter[]
  parentTemplate           Template?                   @relation("TemplateVersions", fields: [parentTemplateId], references: [id])
  childTemplates           Template[]                  @relation("TemplateVersions")

  @@map("templates")
}

model TemplateParameter {
  id                 String    @id @default(cuid())
  templateId         String
  parameterId        String
  isRequired         Boolean   @default(false)
  isVisible          Boolean   @default(true)
  isReadonly         Boolean   @default(false)
  displayName        String?
  helpText           String?
  placeholder        String?
  groupName          String?
  sortOrder          Int       @default(0)
  customMinValue     Float?
  customMaxValue     Float?
  customDefaultValue String?
  customOptions      String?
  dependsOn          String?
  showCondition      String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  parameter          Parameter @relation(fields: [parameterId], references: [id], onDelete: Cascade)
  template           Template  @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@unique([templateId, parameterId])
  @@map("template_parameters")
}

model TemplateFormula {
  id             String   @id @default(cuid())
  templateId     String
  formulaId      String
  executionOrder Int      @default(100)
  isActive       Boolean  @default(true)
  conditions     String?
  outputVariable String?
  outputLabel    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  formula        Formula  @relation(fields: [formulaId], references: [id], onDelete: Cascade)
  template       Template @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@unique([templateId, formulaId, executionOrder])
  @@map("template_formulas")
}

model BomTemplate {
  id              String            @id @default(cuid())
  templateId      String            @unique
  includeWaste    Boolean           @default(true)
  includeSetup    Boolean           @default(true)
  roundQuantities Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  items           BomTemplateItem[]
  template        Template          @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@map("bom_templates")
}

model BomTemplateItem {
  id               String      @id @default(cuid())
  bomTemplateId    String
  resourceId       String
  quantityFormula  String
  quantityUnit     String
  isOptional       Boolean     @default(false)
  groupName        String?
  sortOrder        Int         @default(0)
  includeCondition String?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  resource         Resource    @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  bomTemplate      BomTemplate @relation(fields: [bomTemplateId], references: [id], onDelete: Cascade)

  @@unique([bomTemplateId, resourceId])
  @@map("bom_template_items")
}

model Calculation {
  id             String    @id @default(cuid())
  templateId     String
  inputData      String
  totalCost      Float     @default(0)
  totalPrice     Float     @default(0)
  margin         Float     @default(0)
  laborHours     Float     @default(0)
  bomData        String?
  calculatedBy   String?
  clientInfo     String?
  orderReference String?
  status         String    @default("CALCULATED")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bomItems       BomItem[]
  template       Template  @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@map("calculations")
}

model BomItem {
  id            String      @id @default(cuid())
  calculationId String
  resourceId    String
  quantity      Float
  wasteQuantity Float       @default(0)
  totalQuantity Float
  unit          String
  unitCost      Float
  totalCost     Float
  groupName     String?
  itemType      String      @default("MATERIAL")
  notes         String?
  createdAt     DateTime    @default(now())
  resource      Resource    @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  calculation   Calculation @relation(fields: [calculationId], references: [id], onDelete: Cascade)

  @@unique([calculationId, resourceId])
  @@map("bom_items")
}

model ProductBlock {
  id          String   @id @default(cuid())
  name        String
  description String?
  type        String
  category    String?
  icon        String?
  config      String
  isActive    Boolean  @default(true)
  isSystem    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("product_blocks")
}

model ProductTemplateFromBlocks {
  id                  String    @id @default(cuid())
  name                String
  description         String?
  blocks              String
  generatedTemplateId String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  generatedTemplate   Template? @relation("BlockGeneratedTemplate", fields: [generatedTemplateId], references: [id])

  @@map("product_templates_from_blocks")
}

model Order {
  id                   String      @id @default(cuid())
  orderNumber          String      @unique
  customerName         String
  customerEmail        String?
  customerPhone        String?
  customerAddress      String?
  totalAmount          Float       @default(0)
  advancePayment       Float       @default(0)
  remainingPayment     Float       @default(0)
  currency             String      @default("RUB")
  paymentMethod        String?
  vatRate              Float       @default(20.0)
  applyVat             Boolean     @default(true)
  totalCostNoVat       Float       @default(0)
  totalVatAmount       Float       @default(0)
  totalCostWithVat     Float       @default(0)
  status               String      @default("DRAFT")
  paymentStatus        String      @default("PENDING")
  productionStatus     String      @default("NOT_STARTED")
  orderDate            DateTime    @default(now())
  expectedDeliveryDate DateTime?
  actualDeliveryDate   DateTime?
  notes                String?
  internalNotes        String?
  priority             String      @default("MEDIUM")
  source               String      @default("DIRECT")
  isActive             Boolean     @default(true)
  createdBy            String?
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  items                OrderItem[]

  @@map("orders")
}

model OrderItem {
  id                      String                    @id @default(cuid())
  orderId                 String
  productId               String?
  templateId              String?
  calculationId           String?
  itemName                String
  itemDescription         String?
  quantity                Float                     @default(1)
  effectiveQuantity       Float?
  unit                    String                    @default("шт")
  unitPrice               Float                     @default(0)
  totalPrice              Float                     @default(0)
  nameSnapshot            String?
  unitSnapshot            String?
  markupType              String                    @default("percent")
  markupValue             Float                     @default(0)
  manualPrice             Float?
  unitCost                Float                     @default(0)
  lineCost                Float                     @default(0)
  linePriceNoVat          Float                     @default(0)
  vatAmount               Float                     @default(0)
  linePriceWithVat        Float                     @default(0)
  calculationParameters   String?
  estimatedProductionTime Float                     @default(0)
  actualProductionTime    Float                     @default(0)
  productionNotes         String?
  status                  String                    @default("PENDING")
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  cuttingPlans            CuttingPlan[]
  funds                   OrderItemFund[]
  materials               OrderItemMaterial[]
  parameterValues         OrderItemParameterValue[]
  workTypes               OrderItemWorkType[]
  template                Template?                 @relation("OrderItemTemplate", fields: [templateId], references: [id])
  product                 Product?                  @relation(fields: [productId], references: [id])
  order                   Order                     @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model MeasurementUnit {
  id               String   @id @default(cuid())
  name             String   @unique
  symbol           String
  type             String
  baseUnit         String
  conversionFactor Float    @default(1.0)
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("measurement_units")
}

model OrderItemMaterial {
  id               String        @id @default(cuid())
  orderItemId      String
  sourceMaterialId String?
  nameSnapshot     String
  unitSnapshot     String
  priceSnapshot    Float
  quantity         Float
  calcCost         Float
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  sourceMaterial   MaterialItem? @relation(fields: [sourceMaterialId], references: [id])
  orderItem        OrderItem     @relation(fields: [orderItemId], references: [id], onDelete: Cascade)

  @@map("order_item_materials")
}

model OrderItemWorkType {
  id               String    @id @default(cuid())
  orderItemId      String
  sourceWorkTypeId String?
  nameSnapshot     String
  unitSnapshot     String
  priceSnapshot    Float
  quantity         Float
  calcCost         Float
  sequence         Int       @default(0)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  sourceWorkType   WorkType? @relation(fields: [sourceWorkTypeId], references: [id])
  orderItem        OrderItem @relation(fields: [orderItemId], references: [id], onDelete: Cascade)

  @@map("order_item_work_types")
}

model OrderItemFund {
  id           String    @id @default(cuid())
  orderItemId  String
  sourceFundId String?
  nameSnapshot String
  fundType     String
  fundValue    Float
  calcCost     Float
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  sourceFund   Fund?     @relation(fields: [sourceFundId], references: [id])
  orderItem    OrderItem @relation(fields: [orderItemId], references: [id], onDelete: Cascade)

  @@map("order_item_funds")
}

model ProductComponent {
  id               String                   @id @default(cuid())
  productId        String
  name             String
  description      String?
  componentType    String                   @default("MAIN")
  baseQuantity     Float                    @default(1)
  quantityFormula  String?
  width            Float?
  height           Float?
  depth            Float?
  thickness        Float?
  sortOrder        Int                      @default(0)
  parentId         String?
  isActive         Boolean                  @default(true)
  includeCondition String?
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
  materialUsages   ComponentMaterialUsage[]
  workTypeUsages   ComponentWorkTypeUsage[]
  parent           ProductComponent?        @relation("ComponentHierarchy", fields: [parentId], references: [id])
  children         ProductComponent[]       @relation("ComponentHierarchy")
  product          Product                  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_components")
}

model ComponentMaterialUsage {
  id               String           @id @default(cuid())
  componentId      String
  materialItemId   String
  usageFormula     String
  baseUsage        Float            @default(0)
  wasteFactor      Float            @default(1.0)
  efficiencyFactor Float            @default(1.0)
  cutWidth         Float?
  cutHeight        Float?
  canRotate        Boolean          @default(true)
  unit             String           @default("шт")
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  materialItem     MaterialItem     @relation(fields: [materialItemId], references: [id], onDelete: Cascade)
  component        ProductComponent @relation(fields: [componentId], references: [id], onDelete: Cascade)

  @@unique([componentId, materialItemId])
  @@map("component_material_usages")
}

model ComponentWorkTypeUsage {
  id          String           @id @default(cuid())
  componentId String
  workTypeId  String
  timeFormula String
  baseTime    Float            @default(0)
  sequence    Int              @default(0)
  isParallel  Boolean          @default(false)
  unit        String           @default("час")
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  workType    WorkType         @relation(fields: [workTypeId], references: [id], onDelete: Cascade)
  component   ProductComponent @relation(fields: [componentId], references: [id], onDelete: Cascade)

  @@unique([componentId, workTypeId])
  @@map("component_work_type_usages")
}

model CuttingTemplate {
  id               String        @id @default(cuid())
  name             String
  materialItemId   String
  sheetWidth       Float
  sheetHeight      Float
  sheetThickness   Float?
  sawKerf          Float         @default(3.2)
  edgeTrim         Float         @default(5)
  minPartSize      Float         @default(100)
  wasteCoefficient Float         @default(0.15)
  utilizationRate  Float         @default(0.85)
  isActive         Boolean       @default(true)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  cuttingPlans     CuttingPlan[]
  materialItem     MaterialItem  @relation(fields: [materialItemId], references: [id], onDelete: Cascade)

  @@map("cutting_templates")
}

model CuttingPlan {
  id                String          @id @default(cuid())
  orderItemId       String?
  cuttingTemplateId String
  sheetsRequired    Int             @default(1)
  totalWaste        Float           @default(0)
  utilization       Float           @default(0)
  cuttingData       String?
  partsData         String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  cuttingTemplate   CuttingTemplate @relation(fields: [cuttingTemplateId], references: [id], onDelete: Cascade)
  orderItem         OrderItem?      @relation(fields: [orderItemId], references: [id], onDelete: Cascade)

  @@map("cutting_plans")
}

model AssemblyComponent {
  id                String   @id @default(cuid())
  parentProductId   String
  componentProductId String
  quantity          Float    @default(1)
  unit              String   @default("шт")
  cost              Float    @default(0)
  sequence          Int      @default(0)
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  parentProduct     Product  @relation("ParentProduct", fields: [parentProductId], references: [id], onDelete: Cascade)
  componentProduct  Product  @relation("ComponentProduct", fields: [componentProductId], references: [id], onDelete: Cascade)

  @@unique([parentProductId, componentProductId])
  @@map("assembly_components")
}

// Модель для сохранения пользовательских формул
model SavedFormula {
  id          String   @id @default(cuid())
  name        String
  description String?
  formula     Json     // Структура формулы как JSON
  variables   Json     // Переменные формулы как JSON
  isPublic    Boolean  @default(true)
  category    String?  // Категория формулы (например, "Баннеры", "Материалы")
  createdBy   String?  // ID пользователя (в будущем для многопользовательского режима)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true)

  @@map("saved_formulas")
}

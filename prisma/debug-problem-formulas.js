const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function debugSpecificFormulas() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª...')

  try {
    const template = await prisma.template.findFirst({
      where: { name: '–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞' }
    })

    if (!template) {
      console.log('‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã
    const problemFormulas = ['CALC_STEPS_AUTO', 'CALC_HANDRAIL_LENGTH']
    
    for (const code of problemFormulas) {
      console.log(`\nüìä –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—É–ª—ã ${code}:`)
      
      const formula = await prisma.formula.findUnique({
        where: { code }
      })

      if (formula) {
        console.log(`Expression: ${formula.expression}`)
        console.log(`Input params: ${formula.inputParameters}`)
        
        // –ü–æ–ª—É—á–∏–º —Å–≤—è–∑—å —Å —à–∞–±–ª–æ–Ω–æ–º
        const templateFormula = await prisma.templateFormula.findFirst({
          where: {
            templateId: template.id,
            formulaId: formula.id
          }
        })

        if (templateFormula) {
          console.log(`Output variable: ${templateFormula.outputVariable}`)
          console.log(`Output label: ${templateFormula.outputLabel}`)
        }

        // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if (code === 'CALC_STEPS_AUTO') {
          const HEIGHT = 2500
          const result = Math.ceil(HEIGHT / 280)
          console.log(`–†—É—á–Ω–æ–π —Ä–∞—Å—á–µ—Ç: Math.ceil(${HEIGHT} / 280) = ${result}`)
          console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 9 —Å—Ç—É–ø–µ–Ω–µ–π`)
        }

        if (code === 'CALC_HANDRAIL_LENGTH') {
          const LENGTH = 3000, HEIGHT = 2500, HAS_HANDRAIL = true
          const result = HAS_HANDRAIL ? Math.sqrt(LENGTH * LENGTH + HEIGHT * HEIGHT) / 1000 * 2 : 0
          console.log(`–†—É—á–Ω–æ–π —Ä–∞—Å—á–µ—Ç: HAS_HANDRAIL ? Math.sqrt(${LENGTH}¬≤ + ${HEIGHT}¬≤) / 1000 * 2 : 0`)
          console.log(`= ${HAS_HANDRAIL} ? ${Math.sqrt(LENGTH * LENGTH + HEIGHT * HEIGHT)} / 1000 * 2 : 0`)
          console.log(`= ${result.toFixed(2)} –º–µ—Ç—Ä–æ–≤`)
          console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ~7.81 –º–µ—Ç—Ä–æ–≤ –ø–æ—Ä—É—á–Ω—è`)
        }
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

debugSpecificFormulas()

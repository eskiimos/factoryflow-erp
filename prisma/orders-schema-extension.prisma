// Расширение схемы для системы заказов
// Эти модели нужно добавить в основную schema.prisma

// === КЛИЕНТЫ ===
model Customer {
  id          String @id @default(cuid())
  name        String
  email       String?
  phone       String?
  address     String?
  vatNumber   String? // ИНН для юр. лиц
  isActive    Boolean @default(true)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  orders      Order[]
  
  @@map("customers")
}

// === ЗАКАЗЫ ===
model Order {
  id            String   @id @default(cuid())
  orderNumber   String   @unique // Номер заказа
  date          DateTime @default(now())
  customerId    String?
  
  // НДС настройки
  vatRate       Float    @default(20.0) // НДС в процентах
  applyVat      Boolean  @default(true)
  
  // Итоговые суммы (рассчитываются)
  totalCostNoVat    Float @default(0)
  totalVatAmount    Float @default(0)
  totalCostWithVat  Float @default(0)
  
  comment       String?
  status        String   @default("DRAFT") // DRAFT, CONFIRMED, IN_PROGRESS, COMPLETED, CANCELLED
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  customer      Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)
  items         OrderItem[]
  
  @@map("orders")
}

// === ПОЗИЦИИ ЗАКАЗА ===
model OrderItem {
  id              String @id @default(cuid())
  orderId         String
  productId       String? // Может быть null для custom позиций
  
  // Snapshot данных (фиксируем на момент заказа)
  nameSnapshot    String  // Название на момент заказа
  unitSnapshot    String  // Единица измерения
  
  // Количество и единицы
  quantity        Float
  baseUnitId      String?
  conversionCoef  Float   @default(1.0)
  
  // Наценка менеджера
  markupType      String  @default("percent") // "percent" | "absolute"
  markupValue     Float   @default(0)
  manualPrice     Float?  // Ручная цена (переопределяет расчетную)
  
  // Индивидуальный НДС (если отличается от заказа)
  vatRate         Float?
  
  // Формулы (опционально)
  formulaEnabled  Boolean @default(false)
  formulaParams   String? // JSON с параметрами
  formulaExpression String? // Выражение для расчета
  effectiveQuantity Float? // Результат формулы
  
  // Рассчитанные значения
  unitCost        Float   @default(0) // Себестоимость за единицу
  lineCost        Float   @default(0) // Себестоимость позиции
  linePriceNoVat  Float   @default(0) // Цена без НДС
  vatAmount       Float   @default(0) // Сумма НДС
  linePriceWithVat Float  @default(0) // Цена с НДС
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  order           Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product         Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  materials       OrderItemMaterial[]
  workTypes       OrderItemWorkType[]
  funds           OrderItemFund[]
  
  @@map("order_items")
}

// === МАТЕРИАЛЫ В ПОЗИЦИИ ЗАКАЗА (Snapshot) ===
model OrderItemMaterial {
  id              String @id @default(cuid())
  orderItemId     String
  sourceMaterialId String? // ID оригинального материала
  
  // Snapshot данных
  nameSnapshot    String
  unitSnapshot    String
  priceSnapshot   Float
  
  // Текущие значения для заказа
  quantity        Float
  calcCost        Float // Рассчитанная стоимость
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  orderItem       OrderItem @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  sourceMaterial  MaterialItem? @relation(fields: [sourceMaterialId], references: [id], onDelete: SetNull)
  
  @@map("order_item_materials")
}

// === ВИДЫ РАБОТ В ПОЗИЦИИ ЗАКАЗА (Snapshot) ===
model OrderItemWorkType {
  id              String @id @default(cuid())
  orderItemId     String
  sourceWorkTypeId String? // ID оригинального вида работ
  
  // Snapshot данных
  nameSnapshot    String
  unitSnapshot    String
  priceSnapshot   Float // hourlyRate на момент заказа
  
  // Текущие значения для заказа
  quantity        Float
  calcCost        Float // Рассчитанная стоимость
  sequence        Int   @default(0)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  orderItem       OrderItem @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  sourceWorkType  WorkType? @relation(fields: [sourceWorkTypeId], references: [id], onDelete: SetNull)
  
  @@map("order_item_work_types")
}

// === ФОНДЫ В ПОЗИЦИИ ЗАКАЗА (Snapshot) ===
model OrderItemFund {
  id              String @id @default(cuid())
  orderItemId     String
  sourceFundId    String? // ID оригинального фонда
  
  // Snapshot данных
  nameSnapshot    String
  
  // Настройки фонда
  fundType        String // "percent" | "fixed"
  fundValue       Float  // Процент или фиксированная сумма
  calcCost        Float  // Рассчитанная стоимость
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  orderItem       OrderItem @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  sourceFund      Fund? @relation(fields: [sourceFundId], references: [id], onDelete: SetNull)
  
  @@map("order_item_funds")
}

// Дополнительные связи к существующим моделям:
// MaterialItem += orderItemMaterials OrderItemMaterial[]
// WorkType += orderItemWorkTypes OrderItemWorkType[]
// Fund += orderItemFunds OrderItemFund[]
// Product += orderItems OrderItem[]

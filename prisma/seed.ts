import { PrismaClient } from "@prisma/client"

const prisma = new PrismaClient()

async function main() {
  console.log("üå± –ù–∞—á–∏–Ω–∞—é –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: "–ú–µ—Ç–∞–ª–ª—ã",
        description: "–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Å–ø–ª–∞–≤—ã",
      },
    }),
    prisma.category.create({
      data: {
        name: "–ü–ª–∞—Å—Ç–∏–∫–∏",
        description: "–ü–æ–ª–∏–º–µ—Ä–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–ª–∞—Å—Ç–º–∞—Å—Å—ã",
      },
    }),
    prisma.category.create({
      data: {
        name: "–ö–æ–º–ø–æ–∑–∏—Ç—ã",
        description: "–ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –∏ –∞—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
      },
    }),
    prisma.category.create({
      data: {
        name: "–•–∏–º–∏–∫–∞—Ç—ã",
        description: "–•–∏–º–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ç–∏–≤—ã –∏ –≤–µ—â–µ—Å—Ç–≤–∞",
      },
    }),
    prisma.category.create({
      data: {
        name: "–ö—Ä–µ–ø–µ–∂",
        description: "–ë–æ–ª—Ç—ã, –≥–∞–π–∫–∏, —à–∞–π–±—ã –∏ –ø—Ä–æ—á–∏–π –∫—Ä–µ–ø–µ–∂",
      },
    }),
  ])

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`)

  // –°–æ–∑–¥–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
  const materials = [
    // –ú–µ—Ç–∞–ª–ª—ã
    { name: "–°—Ç–∞–ª—å —É–≥–ª–µ—Ä–æ–¥–∏—Å—Ç–∞—è –°—Ç3", unit: "–∫–≥", price: 85.50, categoryId: categories[0].id },
    { name: "–ê–ª—é–º–∏–Ω–∏–π –ê–î31", unit: "–∫–≥", price: 245.00, categoryId: categories[0].id },
    { name: "–ú–µ–¥—å –ú1", unit: "–∫–≥", price: 890.00, categoryId: categories[0].id },
    { name: "–õ–∞—Ç—É–Ω—å –õ63", unit: "–∫–≥", price: 520.00, categoryId: categories[0].id },
    { name: "–ù–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å 12–•18–ù10–¢", unit: "–∫–≥", price: 320.00, categoryId: categories[0].id },
    
    // –ü–ª–∞—Å—Ç–∏–∫–∏
    { name: "–ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω –ü–≠-100", unit: "–∫–≥", price: 125.00, categoryId: categories[1].id },
    { name: "–ü–æ–ª–∏–ø—Ä–æ–ø–∏–ª–µ–Ω –ü–ü", unit: "–∫–≥", price: 110.00, categoryId: categories[1].id },
    { name: "–ü–í–• –∂–µ—Å—Ç–∫–∏–π", unit: "–∫–≥", price: 95.00, categoryId: categories[1].id },
    { name: "–ü–æ–ª–∏–∫–∞—Ä–±–æ–Ω–∞—Ç", unit: "–∫–≥", price: 450.00, categoryId: categories[1].id },
    { name: "–ü–¢–§–≠ (–¢–µ—Ñ–ª–æ–Ω)", unit: "–∫–≥", price: 1250.00, categoryId: categories[1].id },
    
    // –ö–æ–º–ø–æ–∑–∏—Ç—ã
    { name: "–°—Ç–µ–∫–ª–æ–ø–ª–∞—Å—Ç–∏–∫", unit: "–º¬≤", price: 2800.00, categoryId: categories[2].id },
    { name: "–£–≥–ª–µ–ø–ª–∞—Å—Ç–∏–∫", unit: "–º¬≤", price: 8500.00, categoryId: categories[2].id },
    { name: "–°—Ç–µ–∫–ª–æ—Ç–µ–∫—Å—Ç–æ–ª–∏—Ç", unit: "–∫–≥", price: 380.00, categoryId: categories[2].id },
    
    // –•–∏–º–∏–∫–∞—Ç—ã
    { name: "–ê—Ü–µ—Ç–æ–Ω —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π", unit: "–ª", price: 125.00, categoryId: categories[3].id },
    { name: "–¢–æ–ª—É–æ–ª", unit: "–ª", price: 150.00, categoryId: categories[3].id },
    { name: "–≠–ø–æ–∫—Å–∏–¥–Ω–∞—è —Å–º–æ–ª–∞ –≠–î-20", unit: "–∫–≥", price: 320.00, categoryId: categories[3].id },
    { name: "–û—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å –ü–≠–ü–ê", unit: "–∫–≥", price: 280.00, categoryId: categories[3].id },
    
    // –ö—Ä–µ–ø–µ–∂
    { name: "–ë–æ–ª—Ç –ú8—Ö40 DIN 933", unit: "—à—Ç", price: 12.50, categoryId: categories[4].id },
    { name: "–ì–∞–π–∫–∞ –ú8 DIN 934", unit: "—à—Ç", price: 4.20, categoryId: categories[4].id },
    { name: "–®–∞–π–±–∞ 8 DIN 125", unit: "—à—Ç", price: 1.80, categoryId: categories[4].id },
    { name: "–í–∏–Ω—Ç –ú6—Ö20 DIN 84", unit: "—à—Ç", price: 8.70, categoryId: categories[4].id },
  ]

  const createdMaterials = await Promise.all(
    materials.map((material) =>
      prisma.materialItem.create({
        data: {
          ...material,
          tags: JSON.stringify(["–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "—Å–∫–ª–∞–¥"]),
        },
      })
    )
  )

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdMaterials.length} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤`)
  console.log("üéâ –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã:", e)
    await prisma.$disconnect()
    process.exit(1)
  })

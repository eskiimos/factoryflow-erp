const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createBomTemplates() {
  console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ BOM-—à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤...')

  try {
    // 1. BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü—ã
    const ladderBom = await prisma.bomTemplate.create({
      data: {
        templateId: 'cmdegjp1e0000ugzj4dk1nb4x', // ID —à–∞–±–ª–æ–Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—ã
        name: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü—ã',
        description: '–ü–æ–ª–Ω–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞–±–æ—Ç –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü—ã',
        items: JSON.stringify([
          {
            type: 'MATERIAL',
            code: 'WOOD_BOARD',
            name: '–î–æ—Å–∫–∞ {{WOOD_TYPE}} {{LADDER_WIDTH}}x40–º–º',
            quantity: '{{wood_volume}} * 0.85',
            unit: '–º¬≥',
            unitPrice: '{{WOOD_TYPE === "pine" ? 15000 : WOOD_TYPE === "oak" ? 35000 : WOOD_TYPE === "birch" ? 25000 : 20000}}',
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'MATERIAL', 
            code: 'STEP_WOOD',
            name: '–°—Ç—É–ø–µ–Ω–∏ –∏–∑ {{WOOD_TYPE}}',
            quantity: '{{calculated_steps}}',
            unit: '—à—Ç',
            unitPrice: '{{WOOD_TYPE === "pine" ? 800 : WOOD_TYPE === "oak" ? 1500 : WOOD_TYPE === "birch" ? 1200 : 1000}}',
            category: '–°—Ç—É–ø–µ–Ω–∏'
          },
          {
            type: 'MATERIAL',
            code: 'HANDRAIL_WOOD',
            name: '–ü–æ—Ä—É—á–µ–Ω—å {{WOOD_TYPE}}',
            quantity: '{{handrail_length}}',
            unit: '–º',
            unitPrice: '{{WOOD_TYPE === "pine" ? 600 : WOOD_TYPE === "oak" ? 1200 : WOOD_TYPE === "birch" ? 900 : 800}}',
            category: '–ü–æ—Ä—É—á–Ω–∏ –∏ –æ–≥—Ä–∞–∂–¥–µ–Ω–∏—è',
            condition: '{{HAS_HANDRAIL}}'
          },
          {
            type: 'HARDWARE',
            code: 'MOUNTING_BOLTS',
            name: '–ë–æ–ª—Ç—ã –∫—Ä–µ–ø–µ–∂–Ω—ã–µ –ú8x120',
            quantity: '{{calculated_steps}} * 4',
            unit: '—à—Ç',
            unitPrice: 25,
            category: '–ö—Ä–µ–ø–µ–∂'
          },
          {
            type: 'HARDWARE',
            code: 'WOOD_SCREWS',
            name: '–°–∞–º–æ—Ä–µ–∑—ã –ø–æ –¥–µ—Ä–µ–≤—É 4x50',
            quantity: '{{calculated_steps}} * 8',
            unit: '—à—Ç',
            unitPrice: 3,
            category: '–ö—Ä–µ–ø–µ–∂'
          },
          {
            type: 'WORK',
            code: 'CUTTING_WORK',
            name: '–†–∞—Å–ø–∏–ª–æ–≤–∫–∞ –ø–∏–ª–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
            quantity: '{{wood_volume}} * 2',
            unit: '—á–∞—Å',
            unitPrice: 800,
            category: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'WORK',
            code: 'ASSEMBLY_WORK',
            name: '–°–±–æ—Ä–∫–∞ –ª–µ—Å—Ç–Ω–∏—Ü—ã',
            quantity: '{{assembly_time}}',
            unit: '—á–∞—Å',
            unitPrice: 1200,
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'FINISHING',
            code: 'WOOD_FINISH',
            name: '–§–∏–Ω–∏—à–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ {{WOOD_FINISH}}',
            quantity: '{{wood_volume}} * 1.5',
            unit: '–º¬≤',
            unitPrice: '{{WOOD_FINISH === "varnish" ? 150 : WOOD_FINISH === "oil" ? 200 : WOOD_FINISH === "stain" ? 180 : 120}}',
            category: '–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          }
        ])
      }
    })

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –ª–µ—Å—Ç–Ω–∏—Ü—ã: ${ladderBom.id}`)

    // 2. BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏
    const furnitureBom = await prisma.bomTemplate.create({
      data: {
        templateId: 'cmdei86ab000cugi0z8mqzrf8', // ID —à–∞–±–ª–æ–Ω–∞ –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏
        name: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏',
        description: '–ü–æ–ª–Ω–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏',
        items: JSON.stringify([
          {
            type: 'MATERIAL',
            code: 'FURNITURE_BOARD',
            name: '–ü–ª–∏—Ç–∞ {{MATERIAL_TYPE}}',
            quantity: '{{SURFACE_AREA}} * 1.2',
            unit: '–º¬≤',
            unitPrice: '{{MATERIAL_TYPE === "mdf" ? 800 : MATERIAL_TYPE === "chipboard" ? 600 : MATERIAL_TYPE === "plywood" ? 1000 : MATERIAL_TYPE === "solid_wood" ? 2500 : 800}}',
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'HARDWARE',
            code: 'FURNITURE_HINGES',
            name: '–ü–µ—Ç–ª–∏ –º–µ–±–µ–ª—å–Ω—ã–µ',
            quantity: '{{FURNITURE_TYPE === "cabinet" ? 4 : FURNITURE_TYPE === "wardrobe" ? 6 : 2}}',
            unit: '—à—Ç',
            unitPrice: 150,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'HARDWARE',
            code: 'DRAWER_SLIDES',
            name: '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ –¥–ª—è —è—â–∏–∫–æ–≤',
            quantity: '{{FURNITURE_TYPE === "desk" ? 3 : FURNITURE_TYPE === "cabinet" ? 2 : 0}}',
            unit: '–ø–∞—Ä–∞',
            unitPrice: 300,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'HARDWARE',
            code: 'HANDLES',
            name: '–†—É—á–∫–∏ –º–µ–±–µ–ª—å–Ω—ã–µ',
            quantity: '{{FURNITURE_TYPE === "cabinet" ? 6 : FURNITURE_TYPE === "wardrobe" ? 8 : FURNITURE_TYPE === "desk" ? 3 : 2}}',
            unit: '—à—Ç',
            unitPrice: 80,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'WORK',
            code: 'CUTTING_PANELS',
            name: '–†–∞—Å–ø–∏–ª –ø–∞–Ω–µ–ª–µ–π',
            quantity: '{{SURFACE_AREA}} * 0.5',
            unit: '—á–∞—Å',
            unitPrice: 600,
            category: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'WORK',
            code: 'ASSEMBLY_FURNITURE',
            name: '–°–±–æ—Ä–∫–∞ –º–µ–±–µ–ª–∏',
            quantity: '{{production_time}}',
            unit: '—á–∞—Å',
            unitPrice: 900,
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'FINISHING',
            code: 'SURFACE_FINISH',
            name: '–§–∏–Ω–∏—à–Ω–∞—è –æ—Ç–¥–µ–ª–∫–∞ {{FINISH_TYPE}}',
            quantity: '{{SURFACE_AREA}}',
            unit: '–º¬≤',
            unitPrice: '{{finish_cost}} / {{SURFACE_AREA}}',
            category: '–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          }
        ])
      }
    })

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –º–µ–±–µ–ª–∏: ${furnitureBom.id}`)

    // 3. BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    const metalBom = await prisma.bomTemplate.create({
      data: {
        templateId: 'cmdeiabtc000duglt21fu8qmx', // ID —à–∞–±–ª–æ–Ω–∞ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        name: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
        description: '–ü–æ–ª–Ω–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞–±–æ—Ç –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
        items: JSON.stringify([
          {
            type: 'MATERIAL',
            code: 'STEEL_PROFILE',
            name: '–ü—Ä–æ—Ñ–∏–ª—å —Å—Ç–∞–ª—å–Ω–æ–π {{STEEL_GRADE}}',
            quantity: '{{METAL_WEIGHT}}',
            unit: '–∫–≥',
            unitPrice: '{{STEEL_GRADE === "st3" ? 45 : STEEL_GRADE === "09g2s" ? 52 : STEEL_GRADE === "st20" ? 48 : STEEL_GRADE === "40x" ? 65 : 50}}',
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'MATERIAL',
            code: 'WELDING_ELECTRODES',
            name: '–≠–ª–µ–∫—Ç—Ä–æ–¥—ã —Å–≤–∞—Ä–æ—á–Ω—ã–µ',
            quantity: '{{WELDING_LENGTH}} * 0.5',
            unit: '–∫–≥',
            unitPrice: 120,
            category: '–°–≤–∞—Ä–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'MATERIAL',
            code: 'CUTTING_DISCS',
            name: '–î–∏—Å–∫–∏ –æ—Ç—Ä–µ–∑–Ω—ã–µ',
            quantity: '{{METAL_WEIGHT}} / 100',
            unit: '—à—Ç',
            unitPrice: 45,
            category: '–†–∞—Å—Ö–æ–¥–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'WORK',
            code: 'CUTTING_METAL',
            name: '–†–µ–∑–∫–∞ –º–µ—Ç–∞–ª–ª–∞',
            quantity: '{{METAL_WEIGHT}} * 0.02',
            unit: '—á–∞—Å',
            unitPrice: 800,
            category: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'WORK',
            code: 'WELDING_WORK',
            name: '–°–≤–∞—Ä–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
            quantity: '{{WELDING_LENGTH}} * 0.5',
            unit: '—á–∞—Å',
            unitPrice: '{{CONSTRUCTION_TYPE === "truss" ? 1600 : CONSTRUCTION_TYPE === "frame" ? 1200 : 1000}}',
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'WORK',
            code: 'MACHINING_WORK',
            name: '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞',
            quantity: '{{MACHINING_REQUIRED ? METAL_WEIGHT * 0.03 : 0}}',
            unit: '—á–∞—Å',
            unitPrice: 500,
            category: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
            condition: '{{MACHINING_REQUIRED}}'
          },
          {
            type: 'FINISHING',
            code: 'SURFACE_TREATMENT',
            name: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ {{SURFACE_TREATMENT}}',
            quantity: '{{METAL_WEIGHT}}',
            unit: '–∫–≥',
            unitPrice: '{{SURFACE_TREATMENT === "none" ? 0 : SURFACE_TREATMENT === "primer" ? 8 : SURFACE_TREATMENT === "paint" ? 12 : SURFACE_TREATMENT === "galvanizing" ? 25 : 0}}',
            category: '–ó–∞—â–∏—Ç–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è'
          }
        ])
      }
    })

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω BOM-—à–∞–±–ª–æ–Ω –¥–ª—è –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${metalBom.id}`)

    // 4. BOM-—à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π
    const textileBom = await prisma.bomTemplate.create({
      data: {
        templateId: 'cmdeibcpp000dugp4pjkvg82k', // ID —à–∞–±–ª–æ–Ω–∞ —Ç–µ–∫—Å—Ç–∏–ª—è
        name: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π',
        description: '–ü–æ–ª–Ω–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –ø–æ—à–∏–≤–∞ —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π',
        items: JSON.stringify([
          {
            type: 'MATERIAL',
            code: 'MAIN_FABRIC',
            name: '–¢–∫–∞–Ω—å –æ—Å–Ω–æ–≤–Ω–∞—è {{FABRIC_TYPE}}',
            quantity: '{{FABRIC_CONSUMPTION}}',
            unit: '–º¬≤',
            unitPrice: '{{FABRIC_TYPE === "cotton" ? 150 : FABRIC_TYPE === "linen" ? 250 : FABRIC_TYPE === "wool" ? 400 : FABRIC_TYPE === "silk" ? 800 : FABRIC_TYPE === "polyester" ? 100 : FABRIC_TYPE === "mixed" ? 200 : 150}}',
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          },
          {
            type: 'MATERIAL',
            code: 'LINING_FABRIC',
            name: '–ü–æ–¥–∫–ª–∞–¥–æ—á–Ω–∞—è —Ç–∫–∞–Ω—å',
            quantity: '{{FABRIC_CONSUMPTION}} * 0.8',
            unit: '–º¬≤',
            unitPrice: 80,
            category: '–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
            condition: '{{PRODUCT_TYPE === "jacket" || PRODUCT_TYPE === "dress"}}'
          },
          {
            type: 'HARDWARE',
            code: 'THREADS',
            name: '–ù–∏—Ç–∫–∏ —à–≤–µ–π–Ω—ã–µ',
            quantity: '{{FABRIC_CONSUMPTION}} * 100',
            unit: '–º',
            unitPrice: 0.5,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'HARDWARE',
            code: 'BUTTONS',
            name: '–ü—É–≥–æ–≤–∏—Ü—ã',
            quantity: '{{PRODUCT_TYPE === "shirt" ? 8 : PRODUCT_TYPE === "jacket" ? 6 : PRODUCT_TYPE === "dress" ? 4 : 0}}',
            unit: '—à—Ç',
            unitPrice: 15,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'HARDWARE',
            code: 'ZIPPER',
            name: '–ú–æ–ª–Ω–∏—è',
            quantity: '{{PRODUCT_TYPE === "jacket" || PRODUCT_TYPE === "dress" ? 1 : 0}}',
            unit: '—à—Ç',
            unitPrice: 80,
            category: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞'
          },
          {
            type: 'WORK',
            code: 'CUTTING_FABRIC',
            name: '–†–∞—Å–∫—Ä–æ–π —Ç–∫–∞–Ω–∏',
            quantity: '{{FABRIC_CONSUMPTION}} * 0.3',
            unit: '—á–∞—Å',
            unitPrice: 300,
            category: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'WORK',
            code: 'SEWING_WORK',
            name: '–ü–æ—à–∏–≤ –∏–∑–¥–µ–ª–∏—è',
            quantity: '{{sewing_time_calc}}',
            unit: '—á–∞—Å',
            unitPrice: 350,
            category: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã'
          },
          {
            type: 'FINISHING',
            code: 'FINISHING_WORK',
            name: '–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã {{FINISHING_TYPE}}',
            quantity: '1',
            unit: '—à—Ç',
            unitPrice: '{{finishing_cost_calc}}',
            category: '–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
            condition: '{{FINISHING_TYPE !== "none"}}'
          }
        ])
      }
    })

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω BOM-—à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ–∫—Å—Ç–∏–ª—è: ${textileBom.id}`)

    console.log(`\nüéâ –í—Å–µ BOM-—à–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!`)
    console.log(`üìã –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: 4 BOM-—à–∞–±–ª–æ–Ω–∞`)

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ BOM-—à–∞–±–ª–æ–Ω–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createBomTemplates()
